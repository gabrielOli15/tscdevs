#include "TOTVS.ch"
#include 'tlpp-core.th'

namespace custom.api
using namespace custom.api.utils

/*/{Protheus.doc} apiController
API genérica para consulta de dados no Protheus usando TLPP
@type class
@version  
@author gabriel.antonio@totvs.com.br
@since 11/05/2025
/*/
Class apiController
	Data jResponse  as Json
	Data oService   as Object

	Public Method new() as Object

	@Get("/api/tscdevs/v1/:table")
	Public Method getTable() as Logical 
	
EndClass

/*/{Protheus.doc} new
Construtor da classe apiService. Inicializa uma nova instância da classe.
@type method
@version  
@author gabriel.antonio@totvs.com.br
@since 11/05/2025
@return object, return_description
/*/
Method new() as Object Class apiController 
	
	//Sem prepareIn
	If Type("cEmpAnt") == "U"
		RpcSetEnv( "01","01")
	EndIf

	::oService  := apiService():new()
	::jResponse := JsonObject():new()
Return self

/*/{Protheus.doc} getTable
Consulta dados de uma tabela específica
@type method
@version  
@author gabriel.antonio@totvs.com.br
@since 11/05/2025
@return logical, return_description
/*/
Method getTable() as Logical Class apiController
	Local cFields   as Character
	Local cSort     as Character
	Local cFilter   as Character
	Local nPage     as Numeric
	Local nPageSize as Numeric 

	cFields   := u_getQueryParam( 'fields' )
	cSort     := u_getQueryParam( 'sort' )
	cFilter   := u_getQueryParam( 'filter' )
	nPage     := u_getQueryParam( 'page' )
	nPageSize := u_getQueryParam( 'pagesize' )
	cTable    := cValToChar(oRest:getPathParamsRequest()[ 'table' ])

    oRest:setKeyHeaderResponse('Content-Type','application/json; charset=utf-8')
	oRest:setResponse(::oService:getTable(Val(nPage), Val(nPageSize), cFilter, cFields, cSort, cTable))
Return .T.
